//_________________________________________________________________________________________________
//|                                                                                      -- INFO --
//| Name        : CompilerExtensions.ihh
//| Author(s)   : Niklas Een
//| Module      : Prelude
//| Description : Macros to allow attribute specifications for supporting compilers
//| 
//| (C) Copyright 2010-2014, The Regents of the University of California
//|________________________________________________________________________________________________
//|                                                                                  -- COMMENTS --
//| 
//| Macros are defined empty for other compilers, so should only affect code generation quality,
//| not the semantics of the program.
//|________________________________________________________________________________________________

namespace ZZ {
using namespace std;


//mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
// GCC extensions:


#if defined(__GNUC__)
#  define ___noreturn    __attribute__ ((__noreturn__))
#  define ___unused      __attribute__ ((__unused__))
#  define ___const       __attribute__ ((__const__))
#  define ___malloc      __attribute__ ((__malloc__))
#  define ___packed      __attribute__((packed))
#  define ___may_alias   __attribute__((__may_alias__))
#  define ___aligned(bytes)       __attribute__ ((aligned (bytes)))
#  define ___format(type,fmt,arg) __attribute__ ((__format__(type, fmt, arg) ))
#else
#  define ___noreturn
#  define ___unused
#  define ___const
#  define ___malloc
#  define ___packed
#  define ___may_alias
#  define ___aligned(bytes)
#  define ___format(type,fmt,arg)
#  define __extension__
#endif


//mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm
}
